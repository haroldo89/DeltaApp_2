//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeltaApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeltaBDEntities : DbContext
    {
        public DeltaBDEntities()
            : base("name=DeltaBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<USER> USER { get; set; }
        public virtual DbSet<ROL_VIEW> ROL_VIEW { get; set; }
        public virtual DbSet<AREA_VIEW> AREA_VIEW { get; set; }
        public virtual DbSet<PERTINENCES_VIEW> PERTINENCES_VIEW { get; set; }
        public virtual DbSet<USERS_VIEW> USERS_VIEW { get; set; }
        public virtual DbSet<PROCESS_N0> PROCESS_N0 { get; set; }
        public virtual DbSet<PROCESS_N2> PROCESS_N2 { get; set; }
        public virtual DbSet<PROCESS_N3> PROCESS_N3 { get; set; }
        public virtual DbSet<PROCESS_N0_VIEW> PROCESS_N0_VIEW { get; set; }
        public virtual DbSet<PROCESS_N2_VIEW> PROCESS_N2_VIEW { get; set; }
        public virtual DbSet<PROCESS_N3_VIEW> PROCESS_N3_VIEW { get; set; }
        public virtual DbSet<DIVISION_N1_VIEW> DIVISION_N1_VIEW { get; set; }
        public virtual DbSet<DIVISION_N2_VIEW> DIVISION_N2_VIEW { get; set; }
        public virtual DbSet<DIVISION_N3_VIEW> DIVISION_N3_VIEW { get; set; }
        public virtual DbSet<AREA> AREA { get; set; }
        public virtual DbSet<DIVISION_N1> DIVISION_N1 { get; set; }
        public virtual DbSet<DIVISION_N2> DIVISION_N2 { get; set; }
        public virtual DbSet<DIVISION_N3> DIVISION_N3 { get; set; }
        public virtual DbSet<PROCESS_N1> PROCESS_N1 { get; set; }
        public virtual DbSet<PROCESS_N1_VIEW> PROCESS_N1_VIEW { get; set; }
        public virtual DbSet<PERTINENCES> PERTINENCES { get; set; }
        public virtual DbSet<GOAL_CONFIABILITY_INDEX> GOAL_CONFIABILITY_INDEX { get; set; }
        public virtual DbSet<PRODUCT> PRODUCT { get; set; }
        public virtual DbSet<PRODUCT_VIEW> PRODUCT_VIEW { get; set; }
        public virtual DbSet<PERTINENCES_BY_MEASURE_VIEW> PERTINENCES_BY_MEASURE_VIEW { get; set; }
        public virtual DbSet<PRODUCT_PERTINENCES_VIEW> PRODUCT_PERTINENCES_VIEW { get; set; }
        public virtual DbSet<PERT_MEASURE> PERT_MEASURE { get; set; }
        public virtual DbSet<MEASURE_PERTINENCES_VIEW> MEASURE_PERTINENCES_VIEW { get; set; }
        public virtual DbSet<GENERAL_RESUME_VIEW> GENERAL_RESUME_VIEW { get; set; }
        public virtual DbSet<USER_PU_RELATION_MEASURE_VIEW> USER_PU_RELATION_MEASURE_VIEW { get; set; }
        public virtual DbSet<ROL_RELATION_MEASURE_VIEW> ROL_RELATION_MEASURE_VIEW { get; set; }
        public virtual DbSet<EFECTIVITY_OK_VIEW> EFECTIVITY_OK_VIEW { get; set; }
        public virtual DbSet<EFECTIVITY_VIEW> EFECTIVITY_VIEW { get; set; }
        public virtual DbSet<MEASURE_NO_PRODUCTS_VIEW> MEASURE_NO_PRODUCTS_VIEW { get; set; }
        public virtual DbSet<MEASURE_PRODUCT> MEASURE_PRODUCT { get; set; }
        public virtual DbSet<MEASURE_VIEW> MEASURE_VIEW { get; set; }
        public virtual DbSet<PRODUCT_DEFECTS_DETAIL> PRODUCT_DEFECTS_DETAIL { get; set; }
        public virtual DbSet<PERTINENCES_DEFECTS> PERTINENCES_DEFECTS { get; set; }
        public virtual DbSet<PRODUCT_ROL_VIEW> PRODUCT_ROL_VIEW { get; set; }
        public virtual DbSet<PRODUCT_ROL_QUERY_VIEW> PRODUCT_ROL_QUERY_VIEW { get; set; }
        public virtual DbSet<USER_TYPE_MODULES> USER_TYPE_MODULES { get; set; }
    
        public virtual int DELETE_ROL(string rolID, ObjectParameter resultMessage)
        {
            var rolIDParameter = rolID != null ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_ROL", rolIDParameter, resultMessage);
        }
    
        public virtual int INSERT_ROL(string rolNAME, ObjectParameter resultMessage)
        {
            var rolNAMEParameter = rolNAME != null ?
                new ObjectParameter("rolNAME", rolNAME) :
                new ObjectParameter("rolNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ROL", rolNAMEParameter, resultMessage);
        }
    
        public virtual int UPDATE_ROL(Nullable<int> rolID, string newRolName, ObjectParameter resultMessage)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(int));
    
            var newRolNameParameter = newRolName != null ?
                new ObjectParameter("newRolName", newRolName) :
                new ObjectParameter("newRolName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_ROL", rolIDParameter, newRolNameParameter, resultMessage);
        }
    
        public virtual ObjectResult<ROL_VIEW> GET_ROL_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ROL_VIEW>("GET_ROL_VIEW");
        }
    
        public virtual ObjectResult<ROL_VIEW> GET_ROL_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ROL_VIEW>("GET_ROL_VIEW", mergeOption);
        }
    
        public virtual int INSERT_USER(Nullable<int> rolID, string userDocument, string userName, string userPoblation, string userEmail, string userNick, string userPass, Nullable<sbyte> userActivate, Nullable<int> userType, ObjectParameter resultMessage)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(int));
    
            var userDocumentParameter = userDocument != null ?
                new ObjectParameter("userDocument", userDocument) :
                new ObjectParameter("userDocument", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var userPoblationParameter = userPoblation != null ?
                new ObjectParameter("userPoblation", userPoblation) :
                new ObjectParameter("userPoblation", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userNickParameter = userNick != null ?
                new ObjectParameter("userNick", userNick) :
                new ObjectParameter("userNick", typeof(string));
    
            var userPassParameter = userPass != null ?
                new ObjectParameter("userPass", userPass) :
                new ObjectParameter("userPass", typeof(string));
    
            var userActivateParameter = userActivate.HasValue ?
                new ObjectParameter("userActivate", userActivate) :
                new ObjectParameter("userActivate", typeof(sbyte));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_USER", rolIDParameter, userDocumentParameter, userNameParameter, userPoblationParameter, userEmailParameter, userNickParameter, userPassParameter, userActivateParameter, userTypeParameter, resultMessage);
        }
    
        public virtual ObjectResult<AREA_VIEW> GET_AREA_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AREA_VIEW>("GET_AREA_VIEW");
        }
    
        public virtual ObjectResult<AREA_VIEW> GET_AREA_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AREA_VIEW>("GET_AREA_VIEW", mergeOption);
        }
    
        public virtual int UPDATE_AREA(Nullable<int> areaID, string newAreaName, ObjectParameter resultMessage)
        {
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("areaID", areaID) :
                new ObjectParameter("areaID", typeof(int));
    
            var newAreaNameParameter = newAreaName != null ?
                new ObjectParameter("newAreaName", newAreaName) :
                new ObjectParameter("newAreaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_AREA", areaIDParameter, newAreaNameParameter, resultMessage);
        }
    
        public virtual int DELETE_AREA(Nullable<int> areaID, ObjectParameter resultMessage)
        {
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("areaID", areaID) :
                new ObjectParameter("areaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_AREA", areaIDParameter, resultMessage);
        }
    
        public virtual int INSERT_AREA(string areaNAME, ObjectParameter resultMessage)
        {
            var areaNAMEParameter = areaNAME != null ?
                new ObjectParameter("areaNAME", areaNAME) :
                new ObjectParameter("areaNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_AREA", areaNAMEParameter, resultMessage);
        }
    
        public virtual int DELETE_PERTINENCE(Nullable<int> pertID, ObjectParameter resultMessage)
        {
            var pertIDParameter = pertID.HasValue ?
                new ObjectParameter("pertID", pertID) :
                new ObjectParameter("pertID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PERTINENCE", pertIDParameter, resultMessage);
        }
    
        public virtual int INSERT_PERTINENCE(string pertDETAIL, ObjectParameter resultMessage)
        {
            var pertDETAILParameter = pertDETAIL != null ?
                new ObjectParameter("pertDETAIL", pertDETAIL) :
                new ObjectParameter("pertDETAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PERTINENCE", pertDETAILParameter, resultMessage);
        }
    
        public virtual int UPDATE_PERTINENCE(Nullable<int> pertID, string newPertDetail, ObjectParameter resultMessage)
        {
            var pertIDParameter = pertID.HasValue ?
                new ObjectParameter("pertID", pertID) :
                new ObjectParameter("pertID", typeof(int));
    
            var newPertDetailParameter = newPertDetail != null ?
                new ObjectParameter("newPertDetail", newPertDetail) :
                new ObjectParameter("newPertDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PERTINENCE", pertIDParameter, newPertDetailParameter, resultMessage);
        }
    
        public virtual ObjectResult<USERS_VIEW> GET_USERS_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USERS_VIEW>("GET_USERS_VIEW");
        }
    
        public virtual ObjectResult<USERS_VIEW> GET_USERS_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USERS_VIEW>("GET_USERS_VIEW", mergeOption);
        }
    
        public virtual int UPDATE_USER(Nullable<int> usrID, string newUserDocument, string newUserName, string newUserPu, string newUserMail, string newUserNick, string newUserPass, Nullable<sbyte> newUserActive, Nullable<int> newUserType, ObjectParameter resultMessage)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            var newUserDocumentParameter = newUserDocument != null ?
                new ObjectParameter("newUserDocument", newUserDocument) :
                new ObjectParameter("newUserDocument", typeof(string));
    
            var newUserNameParameter = newUserName != null ?
                new ObjectParameter("newUserName", newUserName) :
                new ObjectParameter("newUserName", typeof(string));
    
            var newUserPuParameter = newUserPu != null ?
                new ObjectParameter("newUserPu", newUserPu) :
                new ObjectParameter("newUserPu", typeof(string));
    
            var newUserMailParameter = newUserMail != null ?
                new ObjectParameter("newUserMail", newUserMail) :
                new ObjectParameter("newUserMail", typeof(string));
    
            var newUserNickParameter = newUserNick != null ?
                new ObjectParameter("newUserNick", newUserNick) :
                new ObjectParameter("newUserNick", typeof(string));
    
            var newUserPassParameter = newUserPass != null ?
                new ObjectParameter("newUserPass", newUserPass) :
                new ObjectParameter("newUserPass", typeof(string));
    
            var newUserActiveParameter = newUserActive.HasValue ?
                new ObjectParameter("newUserActive", newUserActive) :
                new ObjectParameter("newUserActive", typeof(sbyte));
    
            var newUserTypeParameter = newUserType.HasValue ?
                new ObjectParameter("newUserType", newUserType) :
                new ObjectParameter("newUserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_USER", usrIDParameter, newUserDocumentParameter, newUserNameParameter, newUserPuParameter, newUserMailParameter, newUserNickParameter, newUserPassParameter, newUserActiveParameter, newUserTypeParameter, resultMessage);
        }
    
        public virtual int DELETE_USER(Nullable<int> userID, ObjectParameter resultMessage)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_USER", userIDParameter, resultMessage);
        }
    
        public virtual int INSERT_PROCESS_N0(string procN0_name, ObjectParameter resultMessage)
        {
            var procN0_nameParameter = procN0_name != null ?
                new ObjectParameter("procN0_name", procN0_name) :
                new ObjectParameter("procN0_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PROCESS_N0", procN0_nameParameter, resultMessage);
        }
    
        public virtual int INSERT_PROCESS_N1(string procN1_name, Nullable<int> procN0_ID, ObjectParameter resultMessage)
        {
            var procN1_nameParameter = procN1_name != null ?
                new ObjectParameter("procN1_name", procN1_name) :
                new ObjectParameter("procN1_name", typeof(string));
    
            var procN0_IDParameter = procN0_ID.HasValue ?
                new ObjectParameter("procN0_ID", procN0_ID) :
                new ObjectParameter("procN0_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PROCESS_N1", procN1_nameParameter, procN0_IDParameter, resultMessage);
        }
    
        public virtual int INSERT_PROCESS_N2(string procN2_name, Nullable<int> procN1_ID, ObjectParameter resultMessage)
        {
            var procN2_nameParameter = procN2_name != null ?
                new ObjectParameter("procN2_name", procN2_name) :
                new ObjectParameter("procN2_name", typeof(string));
    
            var procN1_IDParameter = procN1_ID.HasValue ?
                new ObjectParameter("procN1_ID", procN1_ID) :
                new ObjectParameter("procN1_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PROCESS_N2", procN2_nameParameter, procN1_IDParameter, resultMessage);
        }
    
        public virtual int INSERT_PROCESS_N3(string procN3_name, Nullable<int> procN2_ID, ObjectParameter resultMessage)
        {
            var procN3_nameParameter = procN3_name != null ?
                new ObjectParameter("procN3_name", procN3_name) :
                new ObjectParameter("procN3_name", typeof(string));
    
            var procN2_IDParameter = procN2_ID.HasValue ?
                new ObjectParameter("procN2_ID", procN2_ID) :
                new ObjectParameter("procN2_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PROCESS_N3", procN3_nameParameter, procN2_IDParameter, resultMessage);
        }
    
        public virtual int INSERT_DIVISION_N1(string divN1_name, Nullable<int> areaID, ObjectParameter resultMessage)
        {
            var divN1_nameParameter = divN1_name != null ?
                new ObjectParameter("divN1_name", divN1_name) :
                new ObjectParameter("divN1_name", typeof(string));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("areaID", areaID) :
                new ObjectParameter("areaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DIVISION_N1", divN1_nameParameter, areaIDParameter, resultMessage);
        }
    
        public virtual int INSERT_DIVISION_N2(string divN2_name, Nullable<int> divN1_ID, ObjectParameter resultMessage)
        {
            var divN2_nameParameter = divN2_name != null ?
                new ObjectParameter("divN2_name", divN2_name) :
                new ObjectParameter("divN2_name", typeof(string));
    
            var divN1_IDParameter = divN1_ID.HasValue ?
                new ObjectParameter("divN1_ID", divN1_ID) :
                new ObjectParameter("divN1_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DIVISION_N2", divN2_nameParameter, divN1_IDParameter, resultMessage);
        }
    
        public virtual int INSERT_DIVISION_N3(string divN3_name, Nullable<int> divN2_ID, ObjectParameter resultMessage)
        {
            var divN3_nameParameter = divN3_name != null ?
                new ObjectParameter("divN3_name", divN3_name) :
                new ObjectParameter("divN3_name", typeof(string));
    
            var divN2_IDParameter = divN2_ID.HasValue ?
                new ObjectParameter("divN2_ID", divN2_ID) :
                new ObjectParameter("divN2_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DIVISION_N3", divN3_nameParameter, divN2_IDParameter, resultMessage);
        }
    
        public virtual ObjectResult<DIVISION_N1_VIEW> GET_DIVISION_N1_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N1_VIEW>("GET_DIVISION_N1_VIEW");
        }
    
        public virtual ObjectResult<DIVISION_N1_VIEW> GET_DIVISION_N1_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N1_VIEW>("GET_DIVISION_N1_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<DIVISION_N2_VIEW> GET_DIVISION_N2_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N2_VIEW>("GET_DIVISION_N2_VIEW");
        }
    
        public virtual ObjectResult<DIVISION_N2_VIEW> GET_DIVISION_N2_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N2_VIEW>("GET_DIVISION_N2_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<DIVISION_N3_VIEW> GET_DIVISION_N3_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N3_VIEW>("GET_DIVISION_N3_VIEW");
        }
    
        public virtual ObjectResult<DIVISION_N3_VIEW> GET_DIVISION_N3_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIVISION_N3_VIEW>("GET_DIVISION_N3_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PERTINENCES_VIEW> GET_PERTINENCES_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_VIEW>("GET_PERTINENCES_VIEW");
        }
    
        public virtual ObjectResult<PERTINENCES_VIEW> GET_PERTINENCES_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_VIEW>("GET_PERTINENCES_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PROCESS_N1_VIEW> GET_PROCESS_N1_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N1_VIEW>("GET_PROCESS_N1_VIEW");
        }
    
        public virtual ObjectResult<PROCESS_N1_VIEW> GET_PROCESS_N1_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N1_VIEW>("GET_PROCESS_N1_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PROCESS_N2_VIEW> GET_PROCESS_N2_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N2_VIEW>("GET_PROCESS_N2_VIEW");
        }
    
        public virtual ObjectResult<PROCESS_N2_VIEW> GET_PROCESS_N2_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N2_VIEW>("GET_PROCESS_N2_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PROCESS_N3_VIEW> GET_PROCESS_N3_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N3_VIEW>("GET_PROCESS_N3_VIEW");
        }
    
        public virtual ObjectResult<PROCESS_N3_VIEW> GET_PROCESS_N3_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N3_VIEW>("GET_PROCESS_N3_VIEW", mergeOption);
        }
    
        public virtual int UPDATE_DIVISION_N1(Nullable<int> divID, string newDivDetail, Nullable<int> newAreaID, ObjectParameter resultMessage)
        {
            var divIDParameter = divID.HasValue ?
                new ObjectParameter("divID", divID) :
                new ObjectParameter("divID", typeof(int));
    
            var newDivDetailParameter = newDivDetail != null ?
                new ObjectParameter("newDivDetail", newDivDetail) :
                new ObjectParameter("newDivDetail", typeof(string));
    
            var newAreaIDParameter = newAreaID.HasValue ?
                new ObjectParameter("newAreaID", newAreaID) :
                new ObjectParameter("newAreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_DIVISION_N1", divIDParameter, newDivDetailParameter, newAreaIDParameter, resultMessage);
        }
    
        public virtual int UPDATE_DIVISION_N2(Nullable<int> divID, string newDivDetail, Nullable<int> newDIVFatherID, ObjectParameter resultMessage)
        {
            var divIDParameter = divID.HasValue ?
                new ObjectParameter("divID", divID) :
                new ObjectParameter("divID", typeof(int));
    
            var newDivDetailParameter = newDivDetail != null ?
                new ObjectParameter("newDivDetail", newDivDetail) :
                new ObjectParameter("newDivDetail", typeof(string));
    
            var newDIVFatherIDParameter = newDIVFatherID.HasValue ?
                new ObjectParameter("newDIVFatherID", newDIVFatherID) :
                new ObjectParameter("newDIVFatherID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_DIVISION_N2", divIDParameter, newDivDetailParameter, newDIVFatherIDParameter, resultMessage);
        }
    
        public virtual int UPDATE_DIVISION_N3(Nullable<int> divID, string newDivDetail, Nullable<int> newDIVFatherID, ObjectParameter resultMessage)
        {
            var divIDParameter = divID.HasValue ?
                new ObjectParameter("divID", divID) :
                new ObjectParameter("divID", typeof(int));
    
            var newDivDetailParameter = newDivDetail != null ?
                new ObjectParameter("newDivDetail", newDivDetail) :
                new ObjectParameter("newDivDetail", typeof(string));
    
            var newDIVFatherIDParameter = newDIVFatherID.HasValue ?
                new ObjectParameter("newDIVFatherID", newDIVFatherID) :
                new ObjectParameter("newDIVFatherID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_DIVISION_N3", divIDParameter, newDivDetailParameter, newDIVFatherIDParameter, resultMessage);
        }
    
        public virtual int UPDATE_PROCESS_N0(Nullable<int> procID, string newProcDetail, ObjectParameter resultMessage)
        {
            var procIDParameter = procID.HasValue ?
                new ObjectParameter("procID", procID) :
                new ObjectParameter("procID", typeof(int));
    
            var newProcDetailParameter = newProcDetail != null ?
                new ObjectParameter("newProcDetail", newProcDetail) :
                new ObjectParameter("newProcDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PROCESS_N0", procIDParameter, newProcDetailParameter, resultMessage);
        }
    
        public virtual int UPDATE_PROCESS_N1(Nullable<int> procID, string newProcDetail, Nullable<int> newProcN0ID, ObjectParameter resultMessage)
        {
            var procIDParameter = procID.HasValue ?
                new ObjectParameter("procID", procID) :
                new ObjectParameter("procID", typeof(int));
    
            var newProcDetailParameter = newProcDetail != null ?
                new ObjectParameter("newProcDetail", newProcDetail) :
                new ObjectParameter("newProcDetail", typeof(string));
    
            var newProcN0IDParameter = newProcN0ID.HasValue ?
                new ObjectParameter("newProcN0ID", newProcN0ID) :
                new ObjectParameter("newProcN0ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PROCESS_N1", procIDParameter, newProcDetailParameter, newProcN0IDParameter, resultMessage);
        }
    
        public virtual int UPDATE_PROCESS_N2(Nullable<int> procID, string newProcDetail, Nullable<int> newProcFatherid, ObjectParameter resultMessage)
        {
            var procIDParameter = procID.HasValue ?
                new ObjectParameter("procID", procID) :
                new ObjectParameter("procID", typeof(int));
    
            var newProcDetailParameter = newProcDetail != null ?
                new ObjectParameter("newProcDetail", newProcDetail) :
                new ObjectParameter("newProcDetail", typeof(string));
    
            var newProcFatheridParameter = newProcFatherid.HasValue ?
                new ObjectParameter("newProcFatherid", newProcFatherid) :
                new ObjectParameter("newProcFatherid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PROCESS_N2", procIDParameter, newProcDetailParameter, newProcFatheridParameter, resultMessage);
        }
    
        public virtual int UPDATE_PROCESS_N3(Nullable<int> procID, Nullable<int> newProcFatherid, string newProcDetail, ObjectParameter resultMessage)
        {
            var procIDParameter = procID.HasValue ?
                new ObjectParameter("procID", procID) :
                new ObjectParameter("procID", typeof(int));
    
            var newProcFatheridParameter = newProcFatherid.HasValue ?
                new ObjectParameter("newProcFatherid", newProcFatherid) :
                new ObjectParameter("newProcFatherid", typeof(int));
    
            var newProcDetailParameter = newProcDetail != null ?
                new ObjectParameter("newProcDetail", newProcDetail) :
                new ObjectParameter("newProcDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PROCESS_N3", procIDParameter, newProcFatheridParameter, newProcDetailParameter, resultMessage);
        }
    
        public virtual int DELETE_DIVISION_N1(Nullable<int> divN1_ID, ObjectParameter resultMessage)
        {
            var divN1_IDParameter = divN1_ID.HasValue ?
                new ObjectParameter("divN1_ID", divN1_ID) :
                new ObjectParameter("divN1_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DIVISION_N1", divN1_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_DIVISION_N2(Nullable<int> divN2_ID, ObjectParameter resultMessage)
        {
            var divN2_IDParameter = divN2_ID.HasValue ?
                new ObjectParameter("divN2_ID", divN2_ID) :
                new ObjectParameter("divN2_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DIVISION_N2", divN2_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_DIVISION_N3(Nullable<int> divN3_ID, ObjectParameter resultMessage)
        {
            var divN3_IDParameter = divN3_ID.HasValue ?
                new ObjectParameter("divN3_ID", divN3_ID) :
                new ObjectParameter("divN3_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DIVISION_N3", divN3_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_PROCESS_N0(Nullable<int> procN0_ID, ObjectParameter resultMessage)
        {
            var procN0_IDParameter = procN0_ID.HasValue ?
                new ObjectParameter("procN0_ID", procN0_ID) :
                new ObjectParameter("procN0_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PROCESS_N0", procN0_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_PROCESS_N1(Nullable<int> procN1_ID, ObjectParameter resultMessage)
        {
            var procN1_IDParameter = procN1_ID.HasValue ?
                new ObjectParameter("procN1_ID", procN1_ID) :
                new ObjectParameter("procN1_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PROCESS_N1", procN1_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_PROCESS_N2(Nullable<int> procN2_ID, ObjectParameter resultMessage)
        {
            var procN2_IDParameter = procN2_ID.HasValue ?
                new ObjectParameter("procN2_ID", procN2_ID) :
                new ObjectParameter("procN2_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PROCESS_N2", procN2_IDParameter, resultMessage);
        }
    
        public virtual int DELETE_PROCESS_N3(Nullable<int> procN3_ID, ObjectParameter resultMessage)
        {
            var procN3_IDParameter = procN3_ID.HasValue ?
                new ObjectParameter("procN3_ID", procN3_ID) :
                new ObjectParameter("procN3_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PROCESS_N3", procN3_IDParameter, resultMessage);
        }
    
        public virtual ObjectResult<PROCESS_N0_VIEW> GET_PROCESS_N0_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N0_VIEW>("GET_PROCESS_N0_VIEW");
        }
    
        public virtual ObjectResult<PROCESS_N0_VIEW> GET_PROCESS_N0_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROCESS_N0_VIEW>("GET_PROCESS_N0_VIEW", mergeOption);
        }
    
        public virtual int INSERT_PRODUCT(string pdtName, Nullable<sbyte> pdtHasCode, string pdtSigla, Nullable<int> procN0_ID, Nullable<int> procN1_ID, Nullable<int> procN2_ID, Nullable<int> procN3_ID, string pdtDesc, Nullable<int> pdtOP_Type, Nullable<System.DateTime> pdtAcc_Date, string pdtPoint_Ref, Nullable<int> pdtDays, Nullable<int> pdtHours, Nullable<int> pdtMinutes, Nullable<int> pdtGoal_type, Nullable<int> pdtQuant_Mont, string pdtGoal_Pob, Nullable<int> pdtGoal_index, Nullable<int> pdtGoal_Samples, string inputText, ObjectParameter resultMessage)
        {
            var pdtNameParameter = pdtName != null ?
                new ObjectParameter("pdtName", pdtName) :
                new ObjectParameter("pdtName", typeof(string));
    
            var pdtHasCodeParameter = pdtHasCode.HasValue ?
                new ObjectParameter("pdtHasCode", pdtHasCode) :
                new ObjectParameter("pdtHasCode", typeof(sbyte));
    
            var pdtSiglaParameter = pdtSigla != null ?
                new ObjectParameter("pdtSigla", pdtSigla) :
                new ObjectParameter("pdtSigla", typeof(string));
    
            var procN0_IDParameter = procN0_ID.HasValue ?
                new ObjectParameter("procN0_ID", procN0_ID) :
                new ObjectParameter("procN0_ID", typeof(int));
    
            var procN1_IDParameter = procN1_ID.HasValue ?
                new ObjectParameter("procN1_ID", procN1_ID) :
                new ObjectParameter("procN1_ID", typeof(int));
    
            var procN2_IDParameter = procN2_ID.HasValue ?
                new ObjectParameter("procN2_ID", procN2_ID) :
                new ObjectParameter("procN2_ID", typeof(int));
    
            var procN3_IDParameter = procN3_ID.HasValue ?
                new ObjectParameter("procN3_ID", procN3_ID) :
                new ObjectParameter("procN3_ID", typeof(int));
    
            var pdtDescParameter = pdtDesc != null ?
                new ObjectParameter("pdtDesc", pdtDesc) :
                new ObjectParameter("pdtDesc", typeof(string));
    
            var pdtOP_TypeParameter = pdtOP_Type.HasValue ?
                new ObjectParameter("pdtOP_Type", pdtOP_Type) :
                new ObjectParameter("pdtOP_Type", typeof(int));
    
            var pdtAcc_DateParameter = pdtAcc_Date.HasValue ?
                new ObjectParameter("pdtAcc_Date", pdtAcc_Date) :
                new ObjectParameter("pdtAcc_Date", typeof(System.DateTime));
    
            var pdtPoint_RefParameter = pdtPoint_Ref != null ?
                new ObjectParameter("pdtPoint_Ref", pdtPoint_Ref) :
                new ObjectParameter("pdtPoint_Ref", typeof(string));
    
            var pdtDaysParameter = pdtDays.HasValue ?
                new ObjectParameter("pdtDays", pdtDays) :
                new ObjectParameter("pdtDays", typeof(int));
    
            var pdtHoursParameter = pdtHours.HasValue ?
                new ObjectParameter("pdtHours", pdtHours) :
                new ObjectParameter("pdtHours", typeof(int));
    
            var pdtMinutesParameter = pdtMinutes.HasValue ?
                new ObjectParameter("pdtMinutes", pdtMinutes) :
                new ObjectParameter("pdtMinutes", typeof(int));
    
            var pdtGoal_typeParameter = pdtGoal_type.HasValue ?
                new ObjectParameter("pdtGoal_type", pdtGoal_type) :
                new ObjectParameter("pdtGoal_type", typeof(int));
    
            var pdtQuant_MontParameter = pdtQuant_Mont.HasValue ?
                new ObjectParameter("pdtQuant_Mont", pdtQuant_Mont) :
                new ObjectParameter("pdtQuant_Mont", typeof(int));
    
            var pdtGoal_PobParameter = pdtGoal_Pob != null ?
                new ObjectParameter("pdtGoal_Pob", pdtGoal_Pob) :
                new ObjectParameter("pdtGoal_Pob", typeof(string));
    
            var pdtGoal_indexParameter = pdtGoal_index.HasValue ?
                new ObjectParameter("pdtGoal_index", pdtGoal_index) :
                new ObjectParameter("pdtGoal_index", typeof(int));
    
            var pdtGoal_SamplesParameter = pdtGoal_Samples.HasValue ?
                new ObjectParameter("pdtGoal_Samples", pdtGoal_Samples) :
                new ObjectParameter("pdtGoal_Samples", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PRODUCT", pdtNameParameter, pdtHasCodeParameter, pdtSiglaParameter, procN0_IDParameter, procN1_IDParameter, procN2_IDParameter, procN3_IDParameter, pdtDescParameter, pdtOP_TypeParameter, pdtAcc_DateParameter, pdtPoint_RefParameter, pdtDaysParameter, pdtHoursParameter, pdtMinutesParameter, pdtGoal_typeParameter, pdtQuant_MontParameter, pdtGoal_PobParameter, pdtGoal_indexParameter, pdtGoal_SamplesParameter, inputTextParameter, resultMessage);
        }
    
        public virtual int DELETE_PRODUCT(Nullable<int> pdt_ID, ObjectParameter resultMessage)
        {
            var pdt_IDParameter = pdt_ID.HasValue ?
                new ObjectParameter("pdt_ID", pdt_ID) :
                new ObjectParameter("pdt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PRODUCT", pdt_IDParameter, resultMessage);
        }
    
        public virtual ObjectResult<PRODUCT_VIEW> GET_PRODUCT_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_VIEW>("GET_PRODUCT_VIEW");
        }
    
        public virtual ObjectResult<PRODUCT_VIEW> GET_PRODUCT_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_VIEW>("GET_PRODUCT_VIEW", mergeOption);
        }
    
        public virtual int INSERT_MEASURE(Nullable<int> pdtID, string pdtInitial, Nullable<int> msrRastCode, Nullable<int> usrID, Nullable<int> areaID, Nullable<int> divN1_ID, Nullable<int> divN2_ID, Nullable<int> divN3_ID, Nullable<sbyte> delTimely, Nullable<int> msrDays, Nullable<int> msrHours, Nullable<int> msrMinutes, Nullable<sbyte> msrIsOK, Nullable<int> msrPertOk, string inputText, ObjectParameter resultMessage)
        {
            var pdtIDParameter = pdtID.HasValue ?
                new ObjectParameter("pdtID", pdtID) :
                new ObjectParameter("pdtID", typeof(int));
    
            var pdtInitialParameter = pdtInitial != null ?
                new ObjectParameter("pdtInitial", pdtInitial) :
                new ObjectParameter("pdtInitial", typeof(string));
    
            var msrRastCodeParameter = msrRastCode.HasValue ?
                new ObjectParameter("msrRastCode", msrRastCode) :
                new ObjectParameter("msrRastCode", typeof(int));
    
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("areaID", areaID) :
                new ObjectParameter("areaID", typeof(int));
    
            var divN1_IDParameter = divN1_ID.HasValue ?
                new ObjectParameter("divN1_ID", divN1_ID) :
                new ObjectParameter("divN1_ID", typeof(int));
    
            var divN2_IDParameter = divN2_ID.HasValue ?
                new ObjectParameter("divN2_ID", divN2_ID) :
                new ObjectParameter("divN2_ID", typeof(int));
    
            var divN3_IDParameter = divN3_ID.HasValue ?
                new ObjectParameter("divN3_ID", divN3_ID) :
                new ObjectParameter("divN3_ID", typeof(int));
    
            var delTimelyParameter = delTimely.HasValue ?
                new ObjectParameter("delTimely", delTimely) :
                new ObjectParameter("delTimely", typeof(sbyte));
    
            var msrDaysParameter = msrDays.HasValue ?
                new ObjectParameter("msrDays", msrDays) :
                new ObjectParameter("msrDays", typeof(int));
    
            var msrHoursParameter = msrHours.HasValue ?
                new ObjectParameter("msrHours", msrHours) :
                new ObjectParameter("msrHours", typeof(int));
    
            var msrMinutesParameter = msrMinutes.HasValue ?
                new ObjectParameter("msrMinutes", msrMinutes) :
                new ObjectParameter("msrMinutes", typeof(int));
    
            var msrIsOKParameter = msrIsOK.HasValue ?
                new ObjectParameter("msrIsOK", msrIsOK) :
                new ObjectParameter("msrIsOK", typeof(sbyte));
    
            var msrPertOkParameter = msrPertOk.HasValue ?
                new ObjectParameter("msrPertOk", msrPertOk) :
                new ObjectParameter("msrPertOk", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_MEASURE", pdtIDParameter, pdtInitialParameter, msrRastCodeParameter, usrIDParameter, areaIDParameter, divN1_IDParameter, divN2_IDParameter, divN3_IDParameter, delTimelyParameter, msrDaysParameter, msrHoursParameter, msrMinutesParameter, msrIsOKParameter, msrPertOkParameter, inputTextParameter, resultMessage);
        }
    
        public virtual int DELETE_MEASURE(Nullable<int> msrID, ObjectParameter resultMessage)
        {
            var msrIDParameter = msrID.HasValue ?
                new ObjectParameter("msrID", msrID) :
                new ObjectParameter("msrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_MEASURE", msrIDParameter, resultMessage);
        }
    
        public virtual ObjectResult<PERTINENCES_BY_MEASURE_VIEW> GET_PERTINENECES_MEASURE_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_BY_MEASURE_VIEW>("GET_PERTINENECES_MEASURE_VIEW");
        }
    
        public virtual ObjectResult<PERTINENCES_BY_MEASURE_VIEW> GET_PERTINENECES_MEASURE_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_BY_MEASURE_VIEW>("GET_PERTINENECES_MEASURE_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PRODUCT_PERTINENCES_VIEW> GET_PRODUCT_PERTINECES_VIEW(Nullable<int> pdtID)
        {
            var pdtIDParameter = pdtID.HasValue ?
                new ObjectParameter("pdtID", pdtID) :
                new ObjectParameter("pdtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_PERTINENCES_VIEW>("GET_PRODUCT_PERTINECES_VIEW", pdtIDParameter);
        }
    
        public virtual ObjectResult<PRODUCT_PERTINENCES_VIEW> GET_PRODUCT_PERTINECES_VIEW(Nullable<int> pdtID, MergeOption mergeOption)
        {
            var pdtIDParameter = pdtID.HasValue ?
                new ObjectParameter("pdtID", pdtID) :
                new ObjectParameter("pdtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_PERTINENCES_VIEW>("GET_PRODUCT_PERTINECES_VIEW", mergeOption, pdtIDParameter);
        }
    
        public virtual int GET_MEASURE_CODES_VIEW(Nullable<int> pdtID)
        {
            var pdtIDParameter = pdtID.HasValue ?
                new ObjectParameter("pdtID", pdtID) :
                new ObjectParameter("pdtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MEASURE_CODES_VIEW", pdtIDParameter);
        }
    
        public virtual ObjectResult<MEASURE_PERTINENCES_VIEW> GET_MEASURE_PERTINENCES_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_PERTINENCES_VIEW>("GET_MEASURE_PERTINENCES_VIEW");
        }
    
        public virtual ObjectResult<MEASURE_PERTINENCES_VIEW> GET_MEASURE_PERTINENCES_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_PERTINENCES_VIEW>("GET_MEASURE_PERTINENCES_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<GENERAL_RESUME_VIEW> GET_GENERAL_RESUME_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GENERAL_RESUME_VIEW>("GET_GENERAL_RESUME_VIEW");
        }
    
        public virtual ObjectResult<GENERAL_RESUME_VIEW> GET_GENERAL_RESUME_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GENERAL_RESUME_VIEW>("GET_GENERAL_RESUME_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<USER_PU_RELATION_MEASURE_VIEW> GET_USER_PU_RELATION_MEASURE_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_PU_RELATION_MEASURE_VIEW>("GET_USER_PU_RELATION_MEASURE_VIEW", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<USER_PU_RELATION_MEASURE_VIEW> GET_USER_PU_RELATION_MEASURE_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_PU_RELATION_MEASURE_VIEW>("GET_USER_PU_RELATION_MEASURE_VIEW", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ROL_RELATION_MEASURE_VIEW> GET_ROL_RELATION_MEASURE_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ROL_RELATION_MEASURE_VIEW>("GET_ROL_RELATION_MEASURE_VIEW", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ROL_RELATION_MEASURE_VIEW> GET_ROL_RELATION_MEASURE_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ROL_RELATION_MEASURE_VIEW>("GET_ROL_RELATION_MEASURE_VIEW", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<EFECTIVITY_OK_VIEW> GET_EFECTIVITY_OK_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EFECTIVITY_OK_VIEW>("GET_EFECTIVITY_OK_VIEW", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<EFECTIVITY_OK_VIEW> GET_EFECTIVITY_OK_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EFECTIVITY_OK_VIEW>("GET_EFECTIVITY_OK_VIEW", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<EFECTIVITY_VIEW> GET_EFECTIVITY_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EFECTIVITY_VIEW>("GET_EFECTIVITY_VIEW", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<EFECTIVITY_VIEW> GET_EFECTIVITY_VIEW(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EFECTIVITY_VIEW>("GET_EFECTIVITY_VIEW", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual int UPDATE_PRODUCT(Nullable<int> pdtId, string newPdtName, string newPdtSigla, Nullable<sbyte> newPdtHasCode, Nullable<int> newProcN0_ID, Nullable<int> newProcN1_ID, Nullable<int> newProcN2_ID, Nullable<int> newProcN3_ID, string newProcDesc, Nullable<int> newPdtOP_Type, Nullable<System.DateTime> newPdtAcc_Date, string newPdtPoint_Ref, Nullable<int> newPdtDays, Nullable<int> newPdtHours, Nullable<int> newPdtMinutes, Nullable<int> newPdtGoal_type, Nullable<int> newPdtQuant_Mont, string newPdtGoal_Pob, Nullable<int> newPdtGoal_index, Nullable<int> newPdtGoal_Samples, string inputText, ObjectParameter resultMessage)
        {
            var pdtIdParameter = pdtId.HasValue ?
                new ObjectParameter("pdtId", pdtId) :
                new ObjectParameter("pdtId", typeof(int));
    
            var newPdtNameParameter = newPdtName != null ?
                new ObjectParameter("NewPdtName", newPdtName) :
                new ObjectParameter("NewPdtName", typeof(string));
    
            var newPdtSiglaParameter = newPdtSigla != null ?
                new ObjectParameter("NewPdtSigla", newPdtSigla) :
                new ObjectParameter("NewPdtSigla", typeof(string));
    
            var newPdtHasCodeParameter = newPdtHasCode.HasValue ?
                new ObjectParameter("NewPdtHasCode", newPdtHasCode) :
                new ObjectParameter("NewPdtHasCode", typeof(sbyte));
    
            var newProcN0_IDParameter = newProcN0_ID.HasValue ?
                new ObjectParameter("NewProcN0_ID", newProcN0_ID) :
                new ObjectParameter("NewProcN0_ID", typeof(int));
    
            var newProcN1_IDParameter = newProcN1_ID.HasValue ?
                new ObjectParameter("NewProcN1_ID", newProcN1_ID) :
                new ObjectParameter("NewProcN1_ID", typeof(int));
    
            var newProcN2_IDParameter = newProcN2_ID.HasValue ?
                new ObjectParameter("NewProcN2_ID", newProcN2_ID) :
                new ObjectParameter("NewProcN2_ID", typeof(int));
    
            var newProcN3_IDParameter = newProcN3_ID.HasValue ?
                new ObjectParameter("NewProcN3_ID", newProcN3_ID) :
                new ObjectParameter("NewProcN3_ID", typeof(int));
    
            var newProcDescParameter = newProcDesc != null ?
                new ObjectParameter("NewProcDesc", newProcDesc) :
                new ObjectParameter("NewProcDesc", typeof(string));
    
            var newPdtOP_TypeParameter = newPdtOP_Type.HasValue ?
                new ObjectParameter("NewPdtOP_Type", newPdtOP_Type) :
                new ObjectParameter("NewPdtOP_Type", typeof(int));
    
            var newPdtAcc_DateParameter = newPdtAcc_Date.HasValue ?
                new ObjectParameter("NewPdtAcc_Date", newPdtAcc_Date) :
                new ObjectParameter("NewPdtAcc_Date", typeof(System.DateTime));
    
            var newPdtPoint_RefParameter = newPdtPoint_Ref != null ?
                new ObjectParameter("NewPdtPoint_Ref", newPdtPoint_Ref) :
                new ObjectParameter("NewPdtPoint_Ref", typeof(string));
    
            var newPdtDaysParameter = newPdtDays.HasValue ?
                new ObjectParameter("NewPdtDays", newPdtDays) :
                new ObjectParameter("NewPdtDays", typeof(int));
    
            var newPdtHoursParameter = newPdtHours.HasValue ?
                new ObjectParameter("NewPdtHours", newPdtHours) :
                new ObjectParameter("NewPdtHours", typeof(int));
    
            var newPdtMinutesParameter = newPdtMinutes.HasValue ?
                new ObjectParameter("NewPdtMinutes", newPdtMinutes) :
                new ObjectParameter("NewPdtMinutes", typeof(int));
    
            var newPdtGoal_typeParameter = newPdtGoal_type.HasValue ?
                new ObjectParameter("NewPdtGoal_type", newPdtGoal_type) :
                new ObjectParameter("NewPdtGoal_type", typeof(int));
    
            var newPdtQuant_MontParameter = newPdtQuant_Mont.HasValue ?
                new ObjectParameter("NewPdtQuant_Mont", newPdtQuant_Mont) :
                new ObjectParameter("NewPdtQuant_Mont", typeof(int));
    
            var newPdtGoal_PobParameter = newPdtGoal_Pob != null ?
                new ObjectParameter("NewPdtGoal_Pob", newPdtGoal_Pob) :
                new ObjectParameter("NewPdtGoal_Pob", typeof(string));
    
            var newPdtGoal_indexParameter = newPdtGoal_index.HasValue ?
                new ObjectParameter("NewPdtGoal_index", newPdtGoal_index) :
                new ObjectParameter("NewPdtGoal_index", typeof(int));
    
            var newPdtGoal_SamplesParameter = newPdtGoal_Samples.HasValue ?
                new ObjectParameter("NewPdtGoal_Samples", newPdtGoal_Samples) :
                new ObjectParameter("NewPdtGoal_Samples", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PRODUCT", pdtIdParameter, newPdtNameParameter, newPdtSiglaParameter, newPdtHasCodeParameter, newProcN0_IDParameter, newProcN1_IDParameter, newProcN2_IDParameter, newProcN3_IDParameter, newProcDescParameter, newPdtOP_TypeParameter, newPdtAcc_DateParameter, newPdtPoint_RefParameter, newPdtDaysParameter, newPdtHoursParameter, newPdtMinutesParameter, newPdtGoal_typeParameter, newPdtQuant_MontParameter, newPdtGoal_PobParameter, newPdtGoal_indexParameter, newPdtGoal_SamplesParameter, inputTextParameter, resultMessage);
        }
    
        public virtual ObjectResult<MEASURE_NO_PRODUCTS_VIEW> GET_PRODUCT_NO_MEASURE_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_NO_PRODUCTS_VIEW>("GET_PRODUCT_NO_MEASURE_VIEW");
        }
    
        public virtual ObjectResult<MEASURE_NO_PRODUCTS_VIEW> GET_PRODUCT_NO_MEASURE_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_NO_PRODUCTS_VIEW>("GET_PRODUCT_NO_MEASURE_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<MEASURE_VIEW> GET_MEASURE_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_VIEW>("GET_MEASURE_VIEW");
        }
    
        public virtual ObjectResult<MEASURE_VIEW> GET_MEASURE_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MEASURE_VIEW>("GET_MEASURE_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PRODUCT_DEFECTS_DETAIL> GET_PRODUCT_DEFECTS_DETAIL(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_DEFECTS_DETAIL>("GET_PRODUCT_DEFECTS_DETAIL", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<PRODUCT_DEFECTS_DETAIL> GET_PRODUCT_DEFECTS_DETAIL(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_DEFECTS_DETAIL>("GET_PRODUCT_DEFECTS_DETAIL", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<PERTINENCES_DEFECTS> GET_PERTINENCES_DEFECTS(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_DEFECTS>("GET_PERTINENCES_DEFECTS", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<PERTINENCES_DEFECTS> GET_PERTINENCES_DEFECTS(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, MergeOption mergeOption)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERTINENCES_DEFECTS>("GET_PERTINENCES_DEFECTS", mergeOption, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<PRODUCT_ROL_VIEW> GET_PRODUCT_ROL_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_VIEW>("GET_PRODUCT_ROL_VIEW");
        }
    
        public virtual ObjectResult<PRODUCT_ROL_VIEW> GET_PRODUCT_ROL_VIEW(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_VIEW>("GET_PRODUCT_ROL_VIEW", mergeOption);
        }
    
        public virtual ObjectResult<PRODUCT_ROL_QUERY_VIEW> GET_PRODUCT_ROL_QUERY_VIEW(Nullable<int> rolID)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_QUERY_VIEW>("GET_PRODUCT_ROL_QUERY_VIEW", rolIDParameter);
        }
    
        public virtual ObjectResult<PRODUCT_ROL_QUERY_VIEW> GET_PRODUCT_ROL_QUERY_VIEW(Nullable<int> rolID, MergeOption mergeOption)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_QUERY_VIEW>("GET_PRODUCT_ROL_QUERY_VIEW", mergeOption, rolIDParameter);
        }
    
        public virtual ObjectResult<USER_TYPE_MODULES> GET_USER_TYPE_MODULES(Nullable<int> userTypeID)
        {
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("userTypeID", userTypeID) :
                new ObjectParameter("userTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_TYPE_MODULES>("GET_USER_TYPE_MODULES", userTypeIDParameter);
        }
    
        public virtual ObjectResult<USER_TYPE_MODULES> GET_USER_TYPE_MODULES(Nullable<int> userTypeID, MergeOption mergeOption)
        {
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("userTypeID", userTypeID) :
                new ObjectParameter("userTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_TYPE_MODULES>("GET_USER_TYPE_MODULES", mergeOption, userTypeIDParameter);
        }
    
        public virtual ObjectResult<PRODUCT_ROL_VIEW> GET_PRODUCT_ROL_VIEW_USER(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_VIEW>("GET_PRODUCT_ROL_VIEW_USER", usrIDParameter);
        }
    
        public virtual ObjectResult<PRODUCT_ROL_VIEW> GET_PRODUCT_ROL_VIEW_USER(Nullable<int> usrID, MergeOption mergeOption)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRODUCT_ROL_VIEW>("GET_PRODUCT_ROL_VIEW_USER", mergeOption, usrIDParameter);
        }
    
        public virtual int INSERT_ROL_PRODUCT(Nullable<int> rolID, string inputText, ObjectParameter resultMessage)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("rolID", rolID) :
                new ObjectParameter("rolID", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ROL_PRODUCT", rolIDParameter, inputTextParameter, resultMessage);
        }
    }
}
